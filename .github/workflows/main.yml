name: Backend CD

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - closed

jobs:
  deploy:
    if: github.event_name == 'push' || github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
    # 1. Backend 코드 체크아웃
    - name: Checkout Backend Code
      uses: actions/checkout@v3

    # 2. Frontend 코드 클론
    - name: Clone Frontend Repository
      run: |
        git clone https://x-access-token:${{ secrets.FRONTEND_REPO_TOKEN }}@github.com/SungWookkk/FTT_frontend.git ftt_frontend

    # 3. Frontend 빌드
    - name: Build Frontend
      run: |
        cd ftt_frontend
        npm install
        npm run build

    # 4. Frontend 빌드 파일을 Backend에 복사
    - name: Copy Frontend Build to Backend
      run: |
        mkdir -p src/main/resources/static
        cp -r ftt_frontend/build/* src/main/resources/static/

    # 5. Backend 코드를 EC2 서버로 동기화
    - name: Sync Backend to EC2
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        rsync -aq --stats --human-readable \
          --exclude '.git/' \
          --exclude '.github/' \
          --exclude 'README.md' \
          --exclude '*.md' \
          --exclude '.idea/' \
          -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
          ./ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/ftt_backend/

    # 6. EC2 서버에서 빌드 및 애플리케이션 실행
    - name: Build and Restart Application
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/ftt_backend/
          chmod +x ./gradlew
          echo "Building backend application..."
          ./gradlew clean build -x test
          echo "Stopping existing application..."
          pkill -f 'java -jar' || true
          echo "Starting new application..."
          nohup java -jar build/libs/*.jar > /dev/null 2>&1 &
