plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'ftt_backend'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


// React 프로젝트 경로 설정
def reactDir = file("C:/ftt_frontend") // React 프로젝트 경로

task buildFrontend(type: Exec) {
	workingDir reactDir // React 프로젝트 디렉토리
	commandLine "C:/Program Files/nodejs/npm.cmd", "run", "build" // npm 경로와 명령어 지정
}

task copyFrontendBuild(type: Copy) {
	dependsOn buildFrontend // 빌드 후 복사하도록 의존성 설정
	from "${reactDir}/build" // React 빌드 결과 경로
	into "src/main/resources/static" // Spring Boot 정적 파일 경로
}

// `:processResources`가 `:copyFrontendBuild` 이후에 실행되도록 설정
tasks.named('processResources') {
	dependsOn copyFrontendBuild
}

// Spring Boot 실행 시 React 빌드와 복사를 자동 실행
tasks.named('bootRun') {
	dependsOn copyFrontendBuild
}
